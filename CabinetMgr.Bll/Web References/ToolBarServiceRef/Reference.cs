//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 

using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;

#pragma warning disable 1591

namespace CabinetMgr.Bll.Web_References.ToolBarServiceRef {
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [WebServiceBinding(Name="ToolBarServiceManageSoap", Namespace="http://tempuri.org/")]
    public partial class ToolBarServiceManage : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetToolBarAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetBaoXiuDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ToolBarServiceManage() {
            this.Url = global::CabinetMgr.Bll.Properties.Settings.Default.CabinetBll_ToolBarServiceRef_ToolBarServiceManage;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetToolBarAllCompletedEventHandler GetToolBarAllCompleted;
        
        /// <remarks/>
        public event SetBaoXiuDateCompletedEventHandler SetBaoXiuDateCompleted;
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/GetToolBarAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetToolBarAll(System.DateTime publishTime) {
            object[] results = this.Invoke("GetToolBarAll", new object[] {
                        publishTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetToolBarAllAsync(System.DateTime publishTime) {
            this.GetToolBarAllAsync(publishTime, null);
        }
        
        /// <remarks/>
        public void GetToolBarAllAsync(System.DateTime publishTime, object userState) {
            if ((this.GetToolBarAllOperationCompleted == null)) {
                this.GetToolBarAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetToolBarAllOperationCompleted);
            }
            this.InvokeAsync("GetToolBarAll", new object[] {
                        publishTime}, this.GetToolBarAllOperationCompleted, userState);
        }
        
        private void OnGetToolBarAllOperationCompleted(object arg) {
            if ((this.GetToolBarAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetToolBarAllCompleted(this, new GetToolBarAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://tempuri.org/SetBaoXiuDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetBaoXiuDate(string userCode, string deviceCode, string deviceName, string deviceArea, string deviceParentCode) {
            object[] results = this.Invoke("SetBaoXiuDate", new object[] {
                        userCode,
                        deviceCode,
                        deviceName,
                        deviceArea,
                        deviceParentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetBaoXiuDateAsync(string userCode, string deviceCode, string deviceName, string deviceArea, string deviceParentCode) {
            this.SetBaoXiuDateAsync(userCode, deviceCode, deviceName, deviceArea, deviceParentCode, null);
        }
        
        /// <remarks/>
        public void SetBaoXiuDateAsync(string userCode, string deviceCode, string deviceName, string deviceArea, string deviceParentCode, object userState) {
            if ((this.SetBaoXiuDateOperationCompleted == null)) {
                this.SetBaoXiuDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBaoXiuDateOperationCompleted);
            }
            this.InvokeAsync("SetBaoXiuDate", new object[] {
                        userCode,
                        deviceCode,
                        deviceName,
                        deviceArea,
                        deviceParentCode}, this.SetBaoXiuDateOperationCompleted, userState);
        }
        
        private void OnSetBaoXiuDateOperationCompleted(object arg) {
            if ((this.SetBaoXiuDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBaoXiuDateCompleted(this, new SetBaoXiuDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetToolBarAllCompletedEventHandler(object sender, GetToolBarAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetToolBarAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetToolBarAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SetBaoXiuDateCompletedEventHandler(object sender, SetBaoXiuDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class SetBaoXiuDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetBaoXiuDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
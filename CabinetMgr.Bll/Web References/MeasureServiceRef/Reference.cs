//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace CabinetMgr.Bll.MeasureServiceRef {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RepairServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseEntity))]
    public partial class RepairService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWrenchInfoTEMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWrenchInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQianfenchiInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuantityCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWrenchInfoListDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchPartNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback WritePartNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkingWrenchInfoListByStepIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWrenchInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelWrenchInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkingProcessListByDeviceCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListCodeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListRepairProcessDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWorkingStepOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RepairService() {
            this.Url = global::CabinetMgr.Bll.Properties.Settings.Default.CabinetBll_MeasureServiceRef_MeasureService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event AddWrenchInfoTEMPCompletedEventHandler AddWrenchInfoTEMPCompleted;
        
        /// <remarks/>
        public event AddWrenchInfoCompletedEventHandler AddWrenchInfoCompleted;
        
        /// <remarks/>
        public event AddQianfenchiInfoCompletedEventHandler AddQianfenchiInfoCompleted;
        
        /// <remarks/>
        public event QuantityCodeCompletedEventHandler QuantityCodeCompleted;
        
        /// <remarks/>
        public event GetWrenchInfoListDataCompletedEventHandler GetWrenchInfoListDataCompleted;
        
        /// <remarks/>
        public event SearchPartNumCompletedEventHandler SearchPartNumCompleted;
        
        /// <remarks/>
        public event WritePartNumCompletedEventHandler WritePartNumCompleted;
        
        /// <remarks/>
        public event GetWorkingWrenchInfoListByStepIdCompletedEventHandler GetWorkingWrenchInfoListByStepIdCompleted;
        
        /// <remarks/>
        public event UpdateWrenchInfoCompletedEventHandler UpdateWrenchInfoCompleted;
        
        /// <remarks/>
        public event DelWrenchInfoCompletedEventHandler DelWrenchInfoCompleted;
        
        /// <remarks/>
        public event GetWorkingProcessListByDeviceCodeCompletedEventHandler GetWorkingProcessListByDeviceCodeCompleted;
        
        /// <remarks/>
        public event ListCodeDataCompletedEventHandler ListCodeDataCompleted;
        
        /// <remarks/>
        public event ListRepairProcessDataCompletedEventHandler ListRepairProcessDataCompleted;
        
        /// <remarks/>
        public event UpdateWorkingStepCompletedEventHandler UpdateWorkingStepCompleted;
        
        /// <remarks/>
        public event GetProcessListCompletedEventHandler GetProcessListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddWrenchInfoTEMP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddWrenchInfoTEMP(string chehao, string bujian, string WrenchNum, string TorqueValue, string TorqueJob, string UserId, string JobResult, System.DateTime strtTime, System.DateTime endTime, string deviceNum, string DefinitionId, string RepairPairId) {
            object[] results = this.Invoke("AddWrenchInfoTEMP", new object[] {
                        chehao,
                        bujian,
                        WrenchNum,
                        TorqueValue,
                        TorqueJob,
                        UserId,
                        JobResult,
                        strtTime,
                        endTime,
                        deviceNum,
                        DefinitionId,
                        RepairPairId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddWrenchInfoTEMPAsync(string chehao, string bujian, string WrenchNum, string TorqueValue, string TorqueJob, string UserId, string JobResult, System.DateTime strtTime, System.DateTime endTime, string deviceNum, string DefinitionId, string RepairPairId) {
            this.AddWrenchInfoTEMPAsync(chehao, bujian, WrenchNum, TorqueValue, TorqueJob, UserId, JobResult, strtTime, endTime, deviceNum, DefinitionId, RepairPairId, null);
        }
        
        /// <remarks/>
        public void AddWrenchInfoTEMPAsync(string chehao, string bujian, string WrenchNum, string TorqueValue, string TorqueJob, string UserId, string JobResult, System.DateTime strtTime, System.DateTime endTime, string deviceNum, string DefinitionId, string RepairPairId, object userState) {
            if ((this.AddWrenchInfoTEMPOperationCompleted == null)) {
                this.AddWrenchInfoTEMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWrenchInfoTEMPOperationCompleted);
            }
            this.InvokeAsync("AddWrenchInfoTEMP", new object[] {
                        chehao,
                        bujian,
                        WrenchNum,
                        TorqueValue,
                        TorqueJob,
                        UserId,
                        JobResult,
                        strtTime,
                        endTime,
                        deviceNum,
                        DefinitionId,
                        RepairPairId}, this.AddWrenchInfoTEMPOperationCompleted, userState);
        }
        
        private void OnAddWrenchInfoTEMPOperationCompleted(object arg) {
            if ((this.AddWrenchInfoTEMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWrenchInfoTEMPCompleted(this, new AddWrenchInfoTEMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddWrenchInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddWrenchInfo(string WrenchNum, string TorqueValue, string TorqueJob, string UserId, string JobResult, System.DateTime strtTime, System.DateTime endTime, string deviceNum, string trainType, string trainNum, string workingId, string RepairPairId, string workingstepId, string DataType) {
            object[] results = this.Invoke("AddWrenchInfo", new object[] {
                        WrenchNum,
                        TorqueValue,
                        TorqueJob,
                        UserId,
                        JobResult,
                        strtTime,
                        endTime,
                        deviceNum,
                        trainType,
                        trainNum,
                        workingId,
                        RepairPairId,
                        workingstepId,
                        DataType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddWrenchInfoAsync(string WrenchNum, string TorqueValue, string TorqueJob, string UserId, string JobResult, System.DateTime strtTime, System.DateTime endTime, string deviceNum, string trainType, string trainNum, string workingId, string RepairPairId, string workingstepId, string DataType) {
            this.AddWrenchInfoAsync(WrenchNum, TorqueValue, TorqueJob, UserId, JobResult, strtTime, endTime, deviceNum, trainType, trainNum, workingId, RepairPairId, workingstepId, DataType, null);
        }
        
        /// <remarks/>
        public void AddWrenchInfoAsync(string WrenchNum, string TorqueValue, string TorqueJob, string UserId, string JobResult, System.DateTime strtTime, System.DateTime endTime, string deviceNum, string trainType, string trainNum, string workingId, string RepairPairId, string workingstepId, string DataType, object userState) {
            if ((this.AddWrenchInfoOperationCompleted == null)) {
                this.AddWrenchInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWrenchInfoOperationCompleted);
            }
            this.InvokeAsync("AddWrenchInfo", new object[] {
                        WrenchNum,
                        TorqueValue,
                        TorqueJob,
                        UserId,
                        JobResult,
                        strtTime,
                        endTime,
                        deviceNum,
                        trainType,
                        trainNum,
                        workingId,
                        RepairPairId,
                        workingstepId,
                        DataType}, this.AddWrenchInfoOperationCompleted, userState);
        }
        
        private void OnAddWrenchInfoOperationCompleted(object arg) {
            if ((this.AddWrenchInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWrenchInfoCompleted(this, new AddWrenchInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddQianfenchiInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddQianfenchiInfo(string CreatUser, string QianfenchiID, string QianfenchiNum, System.DateTime strtTime, System.DateTime endTime, string deviceNum, string trainType, string trainNum, string workingId, string RepairPairId, string workingstepId, string JobResult, string DataType) {
            object[] results = this.Invoke("AddQianfenchiInfo", new object[] {
                        CreatUser,
                        QianfenchiID,
                        QianfenchiNum,
                        strtTime,
                        endTime,
                        deviceNum,
                        trainType,
                        trainNum,
                        workingId,
                        RepairPairId,
                        workingstepId,
                        JobResult,
                        DataType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddQianfenchiInfoAsync(string CreatUser, string QianfenchiID, string QianfenchiNum, System.DateTime strtTime, System.DateTime endTime, string deviceNum, string trainType, string trainNum, string workingId, string RepairPairId, string workingstepId, string JobResult, string DataType) {
            this.AddQianfenchiInfoAsync(CreatUser, QianfenchiID, QianfenchiNum, strtTime, endTime, deviceNum, trainType, trainNum, workingId, RepairPairId, workingstepId, JobResult, DataType, null);
        }
        
        /// <remarks/>
        public void AddQianfenchiInfoAsync(string CreatUser, string QianfenchiID, string QianfenchiNum, System.DateTime strtTime, System.DateTime endTime, string deviceNum, string trainType, string trainNum, string workingId, string RepairPairId, string workingstepId, string JobResult, string DataType, object userState) {
            if ((this.AddQianfenchiInfoOperationCompleted == null)) {
                this.AddQianfenchiInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQianfenchiInfoOperationCompleted);
            }
            this.InvokeAsync("AddQianfenchiInfo", new object[] {
                        CreatUser,
                        QianfenchiID,
                        QianfenchiNum,
                        strtTime,
                        endTime,
                        deviceNum,
                        trainType,
                        trainNum,
                        workingId,
                        RepairPairId,
                        workingstepId,
                        JobResult,
                        DataType}, this.AddQianfenchiInfoOperationCompleted, userState);
        }
        
        private void OnAddQianfenchiInfoOperationCompleted(object arg) {
            if ((this.AddQianfenchiInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQianfenchiInfoCompleted(this, new AddQianfenchiInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QuantityCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool QuantityCode(
                    string WrenchNum, 
                    string TorqueValue, 
                    string TorqueJob, 
                    string UserId, 
                    string JobResult, 
                    string CreatUser, 
                    string QianfenchiID, 
                    string QianfenchiNum, 
                    int type, 
                    int QuantityCodeType, 
                    string QuantityCodeId, 
                    System.DateTime strtTime, 
                    System.DateTime endTime, 
                    string deviceNum, 
                    string trainType, 
                    string trainNum, 
                    string workingId, 
                    string RepairPairId, 
                    string workingstepId) {
            object[] results = this.Invoke("QuantityCode", new object[] {
                        WrenchNum,
                        TorqueValue,
                        TorqueJob,
                        UserId,
                        JobResult,
                        CreatUser,
                        QianfenchiID,
                        QianfenchiNum,
                        type,
                        QuantityCodeType,
                        QuantityCodeId,
                        strtTime,
                        endTime,
                        deviceNum,
                        trainType,
                        trainNum,
                        workingId,
                        RepairPairId,
                        workingstepId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void QuantityCodeAsync(
                    string WrenchNum, 
                    string TorqueValue, 
                    string TorqueJob, 
                    string UserId, 
                    string JobResult, 
                    string CreatUser, 
                    string QianfenchiID, 
                    string QianfenchiNum, 
                    int type, 
                    int QuantityCodeType, 
                    string QuantityCodeId, 
                    System.DateTime strtTime, 
                    System.DateTime endTime, 
                    string deviceNum, 
                    string trainType, 
                    string trainNum, 
                    string workingId, 
                    string RepairPairId, 
                    string workingstepId) {
            this.QuantityCodeAsync(WrenchNum, TorqueValue, TorqueJob, UserId, JobResult, CreatUser, QianfenchiID, QianfenchiNum, type, QuantityCodeType, QuantityCodeId, strtTime, endTime, deviceNum, trainType, trainNum, workingId, RepairPairId, workingstepId, null);
        }
        
        /// <remarks/>
        public void QuantityCodeAsync(
                    string WrenchNum, 
                    string TorqueValue, 
                    string TorqueJob, 
                    string UserId, 
                    string JobResult, 
                    string CreatUser, 
                    string QianfenchiID, 
                    string QianfenchiNum, 
                    int type, 
                    int QuantityCodeType, 
                    string QuantityCodeId, 
                    System.DateTime strtTime, 
                    System.DateTime endTime, 
                    string deviceNum, 
                    string trainType, 
                    string trainNum, 
                    string workingId, 
                    string RepairPairId, 
                    string workingstepId, 
                    object userState) {
            if ((this.QuantityCodeOperationCompleted == null)) {
                this.QuantityCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuantityCodeOperationCompleted);
            }
            this.InvokeAsync("QuantityCode", new object[] {
                        WrenchNum,
                        TorqueValue,
                        TorqueJob,
                        UserId,
                        JobResult,
                        CreatUser,
                        QianfenchiID,
                        QianfenchiNum,
                        type,
                        QuantityCodeType,
                        QuantityCodeId,
                        strtTime,
                        endTime,
                        deviceNum,
                        trainType,
                        trainNum,
                        workingId,
                        RepairPairId,
                        workingstepId}, this.QuantityCodeOperationCompleted, userState);
        }
        
        private void OnQuantityCodeOperationCompleted(object arg) {
            if ((this.QuantityCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuantityCodeCompleted(this, new QuantityCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWrenchInfoListData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WrenchInfoEntity[] GetWrenchInfoListData(string deviceCode, string trainType, string trainNum, string deviceType, string artificialId, string process, string DataType) {
            object[] results = this.Invoke("GetWrenchInfoListData", new object[] {
                        deviceCode,
                        trainType,
                        trainNum,
                        deviceType,
                        artificialId,
                        process,
                        DataType});
            return ((WrenchInfoEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWrenchInfoListDataAsync(string deviceCode, string trainType, string trainNum, string deviceType, string artificialId, string process, string DataType) {
            this.GetWrenchInfoListDataAsync(deviceCode, trainType, trainNum, deviceType, artificialId, process, DataType, null);
        }
        
        /// <remarks/>
        public void GetWrenchInfoListDataAsync(string deviceCode, string trainType, string trainNum, string deviceType, string artificialId, string process, string DataType, object userState) {
            if ((this.GetWrenchInfoListDataOperationCompleted == null)) {
                this.GetWrenchInfoListDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWrenchInfoListDataOperationCompleted);
            }
            this.InvokeAsync("GetWrenchInfoListData", new object[] {
                        deviceCode,
                        trainType,
                        trainNum,
                        deviceType,
                        artificialId,
                        process,
                        DataType}, this.GetWrenchInfoListDataOperationCompleted, userState);
        }
        
        private void OnGetWrenchInfoListDataOperationCompleted(object arg) {
            if ((this.GetWrenchInfoListDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWrenchInfoListDataCompleted(this, new GetWrenchInfoListDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchPartNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SearchPartNum(string PartNum, string DataType) {
            object[] results = this.Invoke("SearchPartNum", new object[] {
                        PartNum,
                        DataType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SearchPartNumAsync(string PartNum, string DataType) {
            this.SearchPartNumAsync(PartNum, DataType, null);
        }
        
        /// <remarks/>
        public void SearchPartNumAsync(string PartNum, string DataType, object userState) {
            if ((this.SearchPartNumOperationCompleted == null)) {
                this.SearchPartNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPartNumOperationCompleted);
            }
            this.InvokeAsync("SearchPartNum", new object[] {
                        PartNum,
                        DataType}, this.SearchPartNumOperationCompleted, userState);
        }
        
        private void OnSearchPartNumOperationCompleted(object arg) {
            if ((this.SearchPartNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPartNumCompleted(this, new SearchPartNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WritePartNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WritePartNum(string PartNum, string PartName, string XC, string DataType) {
            object[] results = this.Invoke("WritePartNum", new object[] {
                        PartNum,
                        PartName,
                        XC,
                        DataType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WritePartNumAsync(string PartNum, string PartName, string XC, string DataType) {
            this.WritePartNumAsync(PartNum, PartName, XC, DataType, null);
        }
        
        /// <remarks/>
        public void WritePartNumAsync(string PartNum, string PartName, string XC, string DataType, object userState) {
            if ((this.WritePartNumOperationCompleted == null)) {
                this.WritePartNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWritePartNumOperationCompleted);
            }
            this.InvokeAsync("WritePartNum", new object[] {
                        PartNum,
                        PartName,
                        XC,
                        DataType}, this.WritePartNumOperationCompleted, userState);
        }
        
        private void OnWritePartNumOperationCompleted(object arg) {
            if ((this.WritePartNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WritePartNumCompleted(this, new WritePartNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWorkingWrenchInfoListByStepId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WrenchInfoEntity[] GetWorkingWrenchInfoListByStepId(string StepId, string DataType) {
            object[] results = this.Invoke("GetWorkingWrenchInfoListByStepId", new object[] {
                        StepId,
                        DataType});
            return ((WrenchInfoEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkingWrenchInfoListByStepIdAsync(string StepId, string DataType) {
            this.GetWorkingWrenchInfoListByStepIdAsync(StepId, DataType, null);
        }
        
        /// <remarks/>
        public void GetWorkingWrenchInfoListByStepIdAsync(string StepId, string DataType, object userState) {
            if ((this.GetWorkingWrenchInfoListByStepIdOperationCompleted == null)) {
                this.GetWorkingWrenchInfoListByStepIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkingWrenchInfoListByStepIdOperationCompleted);
            }
            this.InvokeAsync("GetWorkingWrenchInfoListByStepId", new object[] {
                        StepId,
                        DataType}, this.GetWorkingWrenchInfoListByStepIdOperationCompleted, userState);
        }
        
        private void OnGetWorkingWrenchInfoListByStepIdOperationCompleted(object arg) {
            if ((this.GetWorkingWrenchInfoListByStepIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkingWrenchInfoListByStepIdCompleted(this, new GetWorkingWrenchInfoListByStepIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWrenchInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateWrenchInfo(WrenchInfoEntity WrenchModel) {
            this.Invoke("UpdateWrenchInfo", new object[] {
                        WrenchModel});
        }
        
        /// <remarks/>
        public void UpdateWrenchInfoAsync(WrenchInfoEntity WrenchModel) {
            this.UpdateWrenchInfoAsync(WrenchModel, null);
        }
        
        /// <remarks/>
        public void UpdateWrenchInfoAsync(WrenchInfoEntity WrenchModel, object userState) {
            if ((this.UpdateWrenchInfoOperationCompleted == null)) {
                this.UpdateWrenchInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWrenchInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateWrenchInfo", new object[] {
                        WrenchModel}, this.UpdateWrenchInfoOperationCompleted, userState);
        }
        
        private void OnUpdateWrenchInfoOperationCompleted(object arg) {
            if ((this.UpdateWrenchInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWrenchInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelWrenchInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelWrenchInfo(WrenchInfoEntity WrenchModel) {
            this.Invoke("DelWrenchInfo", new object[] {
                        WrenchModel});
        }
        
        /// <remarks/>
        public void DelWrenchInfoAsync(WrenchInfoEntity WrenchModel) {
            this.DelWrenchInfoAsync(WrenchModel, null);
        }
        
        /// <remarks/>
        public void DelWrenchInfoAsync(WrenchInfoEntity WrenchModel, object userState) {
            if ((this.DelWrenchInfoOperationCompleted == null)) {
                this.DelWrenchInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelWrenchInfoOperationCompleted);
            }
            this.InvokeAsync("DelWrenchInfo", new object[] {
                        WrenchModel}, this.DelWrenchInfoOperationCompleted, userState);
        }
        
        private void OnDelWrenchInfoOperationCompleted(object arg) {
            if ((this.DelWrenchInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelWrenchInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWorkingProcessListByDeviceCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkingProcessEntity[] GetWorkingProcessListByDeviceCode(string code, string DataType) {
            object[] results = this.Invoke("GetWorkingProcessListByDeviceCode", new object[] {
                        code,
                        DataType});
            return ((WorkingProcessEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkingProcessListByDeviceCodeAsync(string code, string DataType) {
            this.GetWorkingProcessListByDeviceCodeAsync(code, DataType, null);
        }
        
        /// <remarks/>
        public void GetWorkingProcessListByDeviceCodeAsync(string code, string DataType, object userState) {
            if ((this.GetWorkingProcessListByDeviceCodeOperationCompleted == null)) {
                this.GetWorkingProcessListByDeviceCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkingProcessListByDeviceCodeOperationCompleted);
            }
            this.InvokeAsync("GetWorkingProcessListByDeviceCode", new object[] {
                        code,
                        DataType}, this.GetWorkingProcessListByDeviceCodeOperationCompleted, userState);
        }
        
        private void OnGetWorkingProcessListByDeviceCodeOperationCompleted(object arg) {
            if ((this.GetWorkingProcessListByDeviceCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkingProcessListByDeviceCodeCompleted(this, new GetWorkingProcessListByDeviceCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListCodeData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RepairProcessEntity[] ListCodeData(string DataType) {
            object[] results = this.Invoke("ListCodeData", new object[] {
                        DataType});
            return ((RepairProcessEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void ListCodeDataAsync(string DataType) {
            this.ListCodeDataAsync(DataType, null);
        }
        
        /// <remarks/>
        public void ListCodeDataAsync(string DataType, object userState) {
            if ((this.ListCodeDataOperationCompleted == null)) {
                this.ListCodeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListCodeDataOperationCompleted);
            }
            this.InvokeAsync("ListCodeData", new object[] {
                        DataType}, this.ListCodeDataOperationCompleted, userState);
        }
        
        private void OnListCodeDataOperationCompleted(object arg) {
            if ((this.ListCodeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCodeDataCompleted(this, new ListCodeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListRepairProcessData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RepairProcessEntity[] ListRepairProcessData(string PartsId, string DataType) {
            object[] results = this.Invoke("ListRepairProcessData", new object[] {
                        PartsId,
                        DataType});
            return ((RepairProcessEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void ListRepairProcessDataAsync(string PartsId, string DataType) {
            this.ListRepairProcessDataAsync(PartsId, DataType, null);
        }
        
        /// <remarks/>
        public void ListRepairProcessDataAsync(string PartsId, string DataType, object userState) {
            if ((this.ListRepairProcessDataOperationCompleted == null)) {
                this.ListRepairProcessDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListRepairProcessDataOperationCompleted);
            }
            this.InvokeAsync("ListRepairProcessData", new object[] {
                        PartsId,
                        DataType}, this.ListRepairProcessDataOperationCompleted, userState);
        }
        
        private void OnListRepairProcessDataOperationCompleted(object arg) {
            if ((this.ListRepairProcessDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListRepairProcessDataCompleted(this, new ListRepairProcessDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateWorkingStep", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateWorkingStep(string stepid, int status, string userid, string username) {
            this.Invoke("UpdateWorkingStep", new object[] {
                        stepid,
                        status,
                        userid,
                        username});
        }
        
        /// <remarks/>
        public void UpdateWorkingStepAsync(string stepid, int status, string userid, string username) {
            this.UpdateWorkingStepAsync(stepid, status, userid, username, null);
        }
        
        /// <remarks/>
        public void UpdateWorkingStepAsync(string stepid, int status, string userid, string username, object userState) {
            if ((this.UpdateWorkingStepOperationCompleted == null)) {
                this.UpdateWorkingStepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWorkingStepOperationCompleted);
            }
            this.InvokeAsync("UpdateWorkingStep", new object[] {
                        stepid,
                        status,
                        userid,
                        username}, this.UpdateWorkingStepOperationCompleted, userState);
        }
        
        private void OnUpdateWorkingStepOperationCompleted(object arg) {
            if ((this.UpdateWorkingStepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWorkingStepCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProcessList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RepairProcessEntity[] GetProcessList(string PartsId, string DataType) {
            object[] results = this.Invoke("GetProcessList", new object[] {
                        PartsId,
                        DataType});
            return ((RepairProcessEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessListAsync(string PartsId, string DataType) {
            this.GetProcessListAsync(PartsId, DataType, null);
        }
        
        /// <remarks/>
        public void GetProcessListAsync(string PartsId, string DataType, object userState) {
            if ((this.GetProcessListOperationCompleted == null)) {
                this.GetProcessListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessListOperationCompleted);
            }
            this.InvokeAsync("GetProcessList", new object[] {
                        PartsId,
                        DataType}, this.GetProcessListOperationCompleted, userState);
        }
        
        private void OnGetProcessListOperationCompleted(object arg) {
            if ((this.GetProcessListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessListCompleted(this, new GetProcessListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WrenchInfoEntity : BaseEntity {
        
        private string idField;
        
        private string wrenchNumField;
        
        private System.Nullable<float> torqueValueField;
        
        private System.Nullable<float> torqueJobField;
        
        private System.Nullable<System.DateTime> jobTimeField;
        
        private string creatUserField;
        
        private System.Nullable<int> jobResultField;
        
        private System.Nullable<System.DateTime> endTimeField;
        
        private string definitionIdField;
        
        private string qianfenchiIDField;
        
        private string qianfenchiNumField;
        
        private System.Nullable<System.DateTime> qianfenchiTimeField;
        
        private System.Nullable<int> typeField;
        
        private string deviceNumField;
        
        private string trainTypeField;
        
        private string trainNumField;
        
        private string workNodeField;
        
        private string workingstepIdField;
        
        private System.Nullable<int> quantityCodeTypeField;
        
        private string quantityCodeIdField;
        
        private string dataTypeField;
        
        private System.Nullable<int> jianXiuCountField;
        
        private string definitionNameField;
        
        private string creatUserNameField;
        
        private string partIdField;
        
        private string partNameField;
        
        private string procesField;
        
        private string templateNameField;
        
        private string valueField;
        
        private string startDateTimeField;
        
        private string endDateTimeField;
        
        private string defaultCountField;
        
        private string defaultValueField;
        
        private string drpProcessField;
        
        private string fullNameField;
        
        private string torqueValueStrField;
        
        private string jobResultStrField;
        
        private string specificationField;
        
        private string artificialIdField;
        
        private byte[] processImageField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string WrenchNum {
            get {
                return this.wrenchNumField;
            }
            set {
                this.wrenchNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> TorqueValue {
            get {
                return this.torqueValueField;
            }
            set {
                this.torqueValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> TorqueJob {
            get {
                return this.torqueJobField;
            }
            set {
                this.torqueJobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> JobTime {
            get {
                return this.jobTimeField;
            }
            set {
                this.jobTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CreatUser {
            get {
                return this.creatUserField;
            }
            set {
                this.creatUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> JobResult {
            get {
                return this.jobResultField;
            }
            set {
                this.jobResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public string DefinitionId {
            get {
                return this.definitionIdField;
            }
            set {
                this.definitionIdField = value;
            }
        }
        
        /// <remarks/>
        public string QianfenchiID {
            get {
                return this.qianfenchiIDField;
            }
            set {
                this.qianfenchiIDField = value;
            }
        }
        
        /// <remarks/>
        public string QianfenchiNum {
            get {
                return this.qianfenchiNumField;
            }
            set {
                this.qianfenchiNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> QianfenchiTime {
            get {
                return this.qianfenchiTimeField;
            }
            set {
                this.qianfenchiTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceNum {
            get {
                return this.deviceNumField;
            }
            set {
                this.deviceNumField = value;
            }
        }
        
        /// <remarks/>
        public string TrainType {
            get {
                return this.trainTypeField;
            }
            set {
                this.trainTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TrainNum {
            get {
                return this.trainNumField;
            }
            set {
                this.trainNumField = value;
            }
        }
        
        /// <remarks/>
        public string WorkNode {
            get {
                return this.workNodeField;
            }
            set {
                this.workNodeField = value;
            }
        }
        
        /// <remarks/>
        public string workingstepId {
            get {
                return this.workingstepIdField;
            }
            set {
                this.workingstepIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> QuantityCodeType {
            get {
                return this.quantityCodeTypeField;
            }
            set {
                this.quantityCodeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string QuantityCodeId {
            get {
                return this.quantityCodeIdField;
            }
            set {
                this.quantityCodeIdField = value;
            }
        }
        
        /// <remarks/>
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> JianXiuCount {
            get {
                return this.jianXiuCountField;
            }
            set {
                this.jianXiuCountField = value;
            }
        }
        
        /// <remarks/>
        public string DefinitionName {
            get {
                return this.definitionNameField;
            }
            set {
                this.definitionNameField = value;
            }
        }
        
        /// <remarks/>
        public string CreatUserName {
            get {
                return this.creatUserNameField;
            }
            set {
                this.creatUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string PartId {
            get {
                return this.partIdField;
            }
            set {
                this.partIdField = value;
            }
        }
        
        /// <remarks/>
        public string PartName {
            get {
                return this.partNameField;
            }
            set {
                this.partNameField = value;
            }
        }
        
        /// <remarks/>
        public string Proces {
            get {
                return this.procesField;
            }
            set {
                this.procesField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string startDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string endDateTime {
            get {
                return this.endDateTimeField;
            }
            set {
                this.endDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultCount {
            get {
                return this.defaultCountField;
            }
            set {
                this.defaultCountField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public string drpProcess {
            get {
                return this.drpProcessField;
            }
            set {
                this.drpProcessField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string TorqueValueStr {
            get {
                return this.torqueValueStrField;
            }
            set {
                this.torqueValueStrField = value;
            }
        }
        
        /// <remarks/>
        public string JobResultStr {
            get {
                return this.jobResultStrField;
            }
            set {
                this.jobResultStrField = value;
            }
        }
        
        /// <remarks/>
        public string Specification {
            get {
                return this.specificationField;
            }
            set {
                this.specificationField = value;
            }
        }
        
        /// <remarks/>
        public string ArtificialId {
            get {
                return this.artificialIdField;
            }
            set {
                this.artificialIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ProcessImage {
            get {
                return this.processImageField;
            }
            set {
                this.processImageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RepairProcessEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProcessDefinitionEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkingStepEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkingProcessEntity))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WrenchInfoEntity))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class BaseEntity {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RepairProcessEntity : BaseEntity {
        
        private string idField;
        
        private string partsIdField;
        
        private string partsNameField;
        
        private string partsTypeField;
        
        private System.Nullable<System.DateTime> repairDateField;
        
        private string procesField;
        
        private int statusField;
        
        private string createUserField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private string trainNumField;
        
        private string trainTypeField;
        
        private string levelNumField;
        
        private string dataTypeField;
        
        private int jianXiuCountField;
        
        private string jianXiuStatusField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string PartsId {
            get {
                return this.partsIdField;
            }
            set {
                this.partsIdField = value;
            }
        }
        
        /// <remarks/>
        public string PartsName {
            get {
                return this.partsNameField;
            }
            set {
                this.partsNameField = value;
            }
        }
        
        /// <remarks/>
        public string PartsType {
            get {
                return this.partsTypeField;
            }
            set {
                this.partsTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RepairDate {
            get {
                return this.repairDateField;
            }
            set {
                this.repairDateField = value;
            }
        }
        
        /// <remarks/>
        public string Proces {
            get {
                return this.procesField;
            }
            set {
                this.procesField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string TrainNum {
            get {
                return this.trainNumField;
            }
            set {
                this.trainNumField = value;
            }
        }
        
        /// <remarks/>
        public string TrainType {
            get {
                return this.trainTypeField;
            }
            set {
                this.trainTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LevelNum {
            get {
                return this.levelNumField;
            }
            set {
                this.levelNumField = value;
            }
        }
        
        /// <remarks/>
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public int JianXiuCount {
            get {
                return this.jianXiuCountField;
            }
            set {
                this.jianXiuCountField = value;
            }
        }
        
        /// <remarks/>
        public string JianXiuStatus {
            get {
                return this.jianXiuStatusField;
            }
            set {
                this.jianXiuStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProcessDefinitionEntity : BaseEntity {
        
        private string idField;
        
        private string templateIdField;
        
        private System.Nullable<int> approvalTypeField;
        
        private System.Nullable<int> sequenceField;
        
        private string fullNameField;
        
        private System.Nullable<int> stateField;
        
        private string createUserField;
        
        private System.Nullable<System.DateTime> createTimeField;
        
        private string updateUserField;
        
        private System.Nullable<System.DateTime> updateTimeField;
        
        private System.Nullable<float> defaultValueField;
        
        private System.Nullable<int> defaultCountField;
        
        private System.Nullable<float> provisionField;
        
        private string standardField;
        
        private string usefulnessField;
        
        private System.Nullable<float> longField;
        
        private System.Nullable<float> widthField;
        
        private System.Nullable<float> heightField;
        
        private string remarkField;
        
        private int imageXField;
        
        private int imageYField;
        
        private string selfPositionField;
        
        private string fromPositionField;
        
        private string specificationField;
        
        private string artificialIdField;
        
        private byte[] processImageField;
        
        private byte[] specificationImageField;
        
        private string minField;
        
        private string maxField;
        
        private int numberTypeField;
        
        private int typeField;
        
        private string createUserNameField;
        
        private string updateUserNameField;
        
        private string imageMasterIdField;
        
        private string defaultCountStrField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateId {
            get {
                return this.templateIdField;
            }
            set {
                this.templateIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ApprovalType {
            get {
                return this.approvalTypeField;
            }
            set {
                this.approvalTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUser {
            get {
                return this.updateUserField;
            }
            set {
                this.updateUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.updateTimeField;
            }
            set {
                this.updateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DefaultCount {
            get {
                return this.defaultCountField;
            }
            set {
                this.defaultCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> Provision {
            get {
                return this.provisionField;
            }
            set {
                this.provisionField = value;
            }
        }
        
        /// <remarks/>
        public string Standard {
            get {
                return this.standardField;
            }
            set {
                this.standardField = value;
            }
        }
        
        /// <remarks/>
        public string Usefulness {
            get {
                return this.usefulnessField;
            }
            set {
                this.usefulnessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> Long {
            get {
                return this.longField;
            }
            set {
                this.longField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int ImageX {
            get {
                return this.imageXField;
            }
            set {
                this.imageXField = value;
            }
        }
        
        /// <remarks/>
        public int ImageY {
            get {
                return this.imageYField;
            }
            set {
                this.imageYField = value;
            }
        }
        
        /// <remarks/>
        public string SelfPosition {
            get {
                return this.selfPositionField;
            }
            set {
                this.selfPositionField = value;
            }
        }
        
        /// <remarks/>
        public string FromPosition {
            get {
                return this.fromPositionField;
            }
            set {
                this.fromPositionField = value;
            }
        }
        
        /// <remarks/>
        public string Specification {
            get {
                return this.specificationField;
            }
            set {
                this.specificationField = value;
            }
        }
        
        /// <remarks/>
        public string ArtificialId {
            get {
                return this.artificialIdField;
            }
            set {
                this.artificialIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ProcessImage {
            get {
                return this.processImageField;
            }
            set {
                this.processImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SpecificationImage {
            get {
                return this.specificationImageField;
            }
            set {
                this.specificationImageField = value;
            }
        }
        
        /// <remarks/>
        public string Min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
            }
        }
        
        /// <remarks/>
        public string Max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
            }
        }
        
        /// <remarks/>
        public int NumberType {
            get {
                return this.numberTypeField;
            }
            set {
                this.numberTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateUserName {
            get {
                return this.updateUserNameField;
            }
            set {
                this.updateUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string ImageMasterId {
            get {
                return this.imageMasterIdField;
            }
            set {
                this.imageMasterIdField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultCountStr {
            get {
                return this.defaultCountStrField;
            }
            set {
                this.defaultCountStrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WorkingStepEntity : BaseEntity {
        
        private string idField;
        
        private string workingIdField;
        
        private string processTemplateIdField;
        
        private string definitionIdField;
        
        private string stepNameField;
        
        private string stepPeopleIdField;
        
        private string stepPeopleNameField;
        
        private int statusField;
        
        private System.DateTime createDateField;
        
        private int sequenceField;
        
        private System.Nullable<float> defaultValueField;
        
        private string specificationField;
        
        private byte[] processImageField;
        
        private byte[] specificationImageField;
        
        private ProcessDefinitionEntity processDefinitionEntityField;
        
        private string defaultCountField;
        
        private string bsHaoField;
        
        private string ljNameField;
        
        private string ljMonadField;
        
        private string bsTypeField;
        
        private string maxField;
        
        private string minField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string WorkingId {
            get {
                return this.workingIdField;
            }
            set {
                this.workingIdField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessTemplateId {
            get {
                return this.processTemplateIdField;
            }
            set {
                this.processTemplateIdField = value;
            }
        }
        
        /// <remarks/>
        public string DefinitionId {
            get {
                return this.definitionIdField;
            }
            set {
                this.definitionIdField = value;
            }
        }
        
        /// <remarks/>
        public string StepName {
            get {
                return this.stepNameField;
            }
            set {
                this.stepNameField = value;
            }
        }
        
        /// <remarks/>
        public string StepPeopleId {
            get {
                return this.stepPeopleIdField;
            }
            set {
                this.stepPeopleIdField = value;
            }
        }
        
        /// <remarks/>
        public string StepPeopleName {
            get {
                return this.stepPeopleNameField;
            }
            set {
                this.stepPeopleNameField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public int Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public string Specification {
            get {
                return this.specificationField;
            }
            set {
                this.specificationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ProcessImage {
            get {
                return this.processImageField;
            }
            set {
                this.processImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SpecificationImage {
            get {
                return this.specificationImageField;
            }
            set {
                this.specificationImageField = value;
            }
        }
        
        /// <remarks/>
        public ProcessDefinitionEntity processDefinitionEntity {
            get {
                return this.processDefinitionEntityField;
            }
            set {
                this.processDefinitionEntityField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultCount {
            get {
                return this.defaultCountField;
            }
            set {
                this.defaultCountField = value;
            }
        }
        
        /// <remarks/>
        public string bsHao {
            get {
                return this.bsHaoField;
            }
            set {
                this.bsHaoField = value;
            }
        }
        
        /// <remarks/>
        public string ljName {
            get {
                return this.ljNameField;
            }
            set {
                this.ljNameField = value;
            }
        }
        
        /// <remarks/>
        public string ljMonad {
            get {
                return this.ljMonadField;
            }
            set {
                this.ljMonadField = value;
            }
        }
        
        /// <remarks/>
        public string BsType {
            get {
                return this.bsTypeField;
            }
            set {
                this.bsTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Max {
            get {
                return this.maxField;
            }
            set {
                this.maxField = value;
            }
        }
        
        /// <remarks/>
        public string Min {
            get {
                return this.minField;
            }
            set {
                this.minField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WorkingProcessEntity : BaseEntity {
        
        private WorkingStepEntity[] workingStepListField;
        
        private string idField;
        
        private string repairIdField;
        
        private string workingIdField;
        
        private string workingNameField;
        
        private string workingPeopleIdField;
        
        private string workingPeopleField;
        
        private string workingDeteField;
        
        private int statusField;
        
        private string createDateField;
        
        private string createUserField;
        
        /// <remarks/>
        public WorkingStepEntity[] workingStepList {
            get {
                return this.workingStepListField;
            }
            set {
                this.workingStepListField = value;
            }
        }
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string RepairId {
            get {
                return this.repairIdField;
            }
            set {
                this.repairIdField = value;
            }
        }
        
        /// <remarks/>
        public string WorkingId {
            get {
                return this.workingIdField;
            }
            set {
                this.workingIdField = value;
            }
        }
        
        /// <remarks/>
        public string WorkingName {
            get {
                return this.workingNameField;
            }
            set {
                this.workingNameField = value;
            }
        }
        
        /// <remarks/>
        public string WorkingPeopleId {
            get {
                return this.workingPeopleIdField;
            }
            set {
                this.workingPeopleIdField = value;
            }
        }
        
        /// <remarks/>
        public string WorkingPeople {
            get {
                return this.workingPeopleField;
            }
            set {
                this.workingPeopleField = value;
            }
        }
        
        /// <remarks/>
        public string WorkingDete {
            get {
                return this.workingDeteField;
            }
            set {
                this.workingDeteField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AddWrenchInfoTEMPCompletedEventHandler(object sender, AddWrenchInfoTEMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWrenchInfoTEMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWrenchInfoTEMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AddWrenchInfoCompletedEventHandler(object sender, AddWrenchInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWrenchInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWrenchInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AddQianfenchiInfoCompletedEventHandler(object sender, AddQianfenchiInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQianfenchiInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQianfenchiInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void QuantityCodeCompletedEventHandler(object sender, QuantityCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuantityCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuantityCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetWrenchInfoListDataCompletedEventHandler(object sender, GetWrenchInfoListDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWrenchInfoListDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWrenchInfoListDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WrenchInfoEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WrenchInfoEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SearchPartNumCompletedEventHandler(object sender, SearchPartNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPartNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPartNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void WritePartNumCompletedEventHandler(object sender, WritePartNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WritePartNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WritePartNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetWorkingWrenchInfoListByStepIdCompletedEventHandler(object sender, GetWorkingWrenchInfoListByStepIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkingWrenchInfoListByStepIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkingWrenchInfoListByStepIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WrenchInfoEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WrenchInfoEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateWrenchInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DelWrenchInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetWorkingProcessListByDeviceCodeCompletedEventHandler(object sender, GetWorkingProcessListByDeviceCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkingProcessListByDeviceCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkingProcessListByDeviceCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkingProcessEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkingProcessEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ListCodeDataCompletedEventHandler(object sender, ListCodeDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCodeDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListCodeDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RepairProcessEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RepairProcessEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ListRepairProcessDataCompletedEventHandler(object sender, ListRepairProcessDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListRepairProcessDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListRepairProcessDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RepairProcessEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RepairProcessEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateWorkingStepCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetProcessListCompletedEventHandler(object sender, GetProcessListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RepairProcessEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RepairProcessEntity[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591